{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from \"axios\";\nimport ADRESS_API from \"../API\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Conversation1(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var user = route.params.user;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var getUsers = function getUsers() {\n    axios.get(`http://${ADRESS_API}:5000/users`).then(function (res) {\n      setUsers(res.data.filter(function (u) {\n        return u.firebaseId !== user;\n      }));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n  var startConversation = function startConversation(user2Id) {\n    axios.post(`http://${ADRESS_API}:5000/chats`, {\n      user1Id: user,\n      user2Id: user2Id\n    }).then(function (res) {\n      navigation.navigate(\"Chat\", {\n        chatRoom: res.data,\n        currentid: user.firebaseId,\n        foreignid: user2Id\n      });\n    }).catch(function (err) {\n      console.log(err, \"Error starting conversation\");\n    });\n  };\n  useEffect(function () {\n    getUsers();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Conversations\"\n    }), users.map(function (e) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return startConversation(e.firebaseId);\n        },\n        children: _jsx(Text, {\n          children: e.userName\n        })\n      }, e.firebaseId);\n    })]\n  });\n}\nexport default Conversation1;","map":{"version":3,"names":["React","useEffect","useState","View","Text","TouchableOpacity","axios","ADRESS_API","jsx","_jsx","jsxs","_jsxs","Conversation1","_ref","route","navigation","user","params","_useState","_useState2","_slicedToArray","users","setUsers","getUsers","get","then","res","data","filter","u","firebaseId","catch","error","console","log","startConversation","user2Id","post","user1Id","navigate","chatRoom","currentid","foreignid","err","children","map","e","onPress","userName"],"sources":["C:/Users/ghazi/Desktop/FiRent/FiRent/Firent/Firent/Screens/Conversation1.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport ADRESS_API from \"../API\";\r\n\r\nfunction Conversation1({ route, navigation }) {\r\n  const { user } = route.params;\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const getUsers = () => {\r\n    axios\r\n      .get(`http://${ADRESS_API}:5000/users`)\r\n      .then((res) => {\r\n        setUsers(res.data.filter((u) => u.firebaseId !== user));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const startConversation = (user2Id) => {\r\n    axios\r\n      .post(`http://${ADRESS_API}:5000/chats`, {\r\n        user1Id: user, // Use user.firebaseId as user1Id\r\n        user2Id: user2Id,\r\n      })\r\n      .then((res) => {\r\n        navigation.navigate(\"Chat\", {\r\n          chatRoom: res.data,\r\n          currentid: user.firebaseId,\r\n          foreignid: user2Id,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, \"Error starting conversation\");\r\n      });\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <Text>Conversations</Text>\r\n      {users.map((e) => (\r\n        <TouchableOpacity\r\n          key={e.firebaseId}\r\n          onPress={() => startConversation(e.firebaseId)}\r\n        >\r\n          <Text>{e.userName}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Conversation1;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAEnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU;AAAe,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhC,SAASC,aAAaA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACxC,IAAQC,IAAI,GAAKF,KAAK,CAACG,MAAM,CAArBD,IAAI;EAEZ,IAAAE,SAAA,GAA0BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrBjB,KAAK,CACFkB,GAAG,CAAE,UAASjB,UAAW,aAAY,CAAC,CACtCkB,IAAI,CAAC,UAACC,GAAG,EAAK;MACbJ,QAAQ,CAACI,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,UAAU,KAAKd,IAAI;MAAA,EAAC,CAAC;IACzD,CAAC,CAAC,CACDe,KAAK,CAAC,UAACC,KAAK;MAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAAA,EAAC;EACzC,CAAC;EAED,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,OAAO,EAAK;IACrC9B,KAAK,CACF+B,IAAI,CAAE,UAAS9B,UAAW,aAAY,EAAE;MACvC+B,OAAO,EAAEtB,IAAI;MACboB,OAAO,EAAEA;IACX,CAAC,CAAC,CACDX,IAAI,CAAC,UAACC,GAAG,EAAK;MACbX,UAAU,CAACwB,QAAQ,CAAC,MAAM,EAAE;QAC1BC,QAAQ,EAAEd,GAAG,CAACC,IAAI;QAClBc,SAAS,EAAEzB,IAAI,CAACc,UAAU;QAC1BY,SAAS,EAAEN;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,CACDL,KAAK,CAAC,UAACY,GAAG,EAAK;MACdV,OAAO,CAACC,GAAG,CAACS,GAAG,EAAE,6BAA6B,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAGD1C,SAAS,CAAC,YAAM;IACdsB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,OACEZ,KAAA,CAACR,IAAI;IAAAyC,QAAA,GACHnC,IAAA,CAACL,IAAI;MAAAwC,QAAA,EAAC;IAAa,CAAM,CAAC,EACzBvB,KAAK,CAACwB,GAAG,CAAC,UAACC,CAAC;MAAA,OACXrC,IAAA,CAACJ,gBAAgB;QAEf0C,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMZ,iBAAiB,CAACW,CAAC,CAAChB,UAAU,CAAC;QAAA,CAAC;QAAAc,QAAA,EAE/CnC,IAAA,CAACL,IAAI;UAAAwC,QAAA,EAAEE,CAAC,CAACE;QAAQ,CAAO;MAAC,GAHpBF,CAAC,CAAChB,UAIS,CAAC;IAAA,CACpB,CAAC;EAAA,CACE,CAAC;AAEX;AAEA,eAAelB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}