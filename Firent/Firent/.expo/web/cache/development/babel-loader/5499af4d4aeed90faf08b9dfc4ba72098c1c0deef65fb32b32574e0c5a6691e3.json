{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport ADRESS_API from \"../API\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Chat(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    chatRoom = _route$params.chatRoom,\n    currentid = _route$params.currentid,\n    foreignid = _route$params.foreignid;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    msg = _useState2[0],\n    setMsg = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var socketRef = useRef(null);\n  var scrollViewRef = useRef(null);\n  useEffect(function () {\n    socketRef.current = io(`http://${ADRESS_API}:5000`);\n    socketRef.current.emit(\"join\", chatRoom.id);\n    socketRef.current.on(\"message\", function (newMessage) {\n      console.log(\"Received new message:\", newMessage);\n      setMessages(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [newMessage]);\n      });\n    });\n    axios.get(`http://${ADRESS_API}:5000/chats/${chatRoom.id}/messages`).then(function (res) {\n      setMessages(res.data);\n    }).catch(function (err) {\n      console.log(\"Error fetching messages:\", err);\n    });\n    return function () {\n      socketRef.current.disconnect();\n    };\n  }, [chatRoom.id]);\n  var sendMessage = function sendMessage() {\n    if (!msg || !chatRoom) {\n      return;\n    }\n    var messageInput = {\n      content: msg,\n      chatId: chatRoom.id\n    };\n    axios.post(`http://${ADRESS_API}:5000/chats/${chatRoom.id}/message`, messageInput).then(function (newMessage) {\n      var _scrollViewRef$curren;\n      socketRef.current.emit(\"send\", newMessage.data);\n      setMessages(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [newMessage.data]);\n      });\n      (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollToEnd({\n        animated: true\n      });\n      setMsg(\"\");\n    }).catch(function (err) {\n      console.log(\"Error sending message:\", err);\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(Text, {\n      children: [\"Chat with \", chatRoom.name || foreignid]\n    }), _jsx(ScrollView, {\n      style: {\n        flex: 1\n      },\n      contentContainerStyle: {\n        paddingVertical: 10\n      },\n      ref: scrollViewRef,\n      children: messages.map(function (message) {\n        return _jsx(View, {\n          children: _jsxs(Text, {\n            children: [message.senderId, \": \", message.content]\n          })\n        }, message.id);\n      })\n    }), _jsxs(View, {\n      children: [_jsx(TextInput, {\n        value: msg,\n        onChangeText: function onChangeText(text) {\n          return setMsg(text);\n        },\n        placeholder: \"Type your message here\"\n      }), _jsx(Button, {\n        onPress: sendMessage,\n        title: \"Send\"\n      })]\n    })]\n  });\n}\nexport default Chat;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useRef","View","Text","ScrollView","TextInput","Button","io","axios","ADRESS_API","jsxs","_jsxs","jsx","_jsx","Chat","_ref","route","_route$params","params","chatRoom","currentid","foreignid","_useState","_useState2","_slicedToArray","msg","setMsg","_useState3","_useState4","messages","setMessages","socketRef","scrollViewRef","current","emit","id","on","newMessage","console","log","prevMessages","concat","_toConsumableArray","get","then","res","data","catch","err","disconnect","sendMessage","messageInput","content","chatId","post","_scrollViewRef$curren","scrollToEnd","animated","style","flex","children","name","contentContainerStyle","paddingVertical","ref","map","message","senderId","value","onChangeText","text","placeholder","onPress","title","_NativeWindStyleSheet","create","styles"],"sources":["C:/Users/ghazi/Desktop/FiRent/FiRent/Firent/Firent/Screens/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { View, Text, ScrollView, TextInput, Button } from \"react-native\";\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport ADRESS_API from \"../API\";\r\n\r\nfunction Chat({ route }) {\r\n  const { chatRoom, currentid, foreignid } = route.params;\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const socketRef = useRef(null);\r\n  const scrollViewRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io(`http://${ADRESS_API}:5000`);\r\n    socketRef.current.emit(\"join\", chatRoom.id);\r\n\r\n    socketRef.current.on(\"message\", (newMessage) => {\r\n      console.log(\"Received new message:\", newMessage);\r\n\r\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n    });\r\n\r\n    axios\r\n      .get(`http://${ADRESS_API}:5000/chats/${chatRoom.id}/messages`)\r\n      .then((res) => {\r\n        setMessages(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error fetching messages:\", err);\r\n      });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [chatRoom.id]);\r\n\r\n  const sendMessage = () => {\r\n    if (!msg || !chatRoom) {\r\n      return;\r\n    }\r\n\r\n    const messageInput = {\r\n      content: msg,\r\n      chatId: chatRoom.id,\r\n    };\r\n\r\n    axios\r\n      .post(`http://${ADRESS_API}:5000/chats/${chatRoom.id}/message`, messageInput)\r\n      .then((newMessage) => {\r\n        socketRef.current.emit(\"send\", newMessage.data);\r\n        setMessages((prevMessages) => [...prevMessages, newMessage.data]);\r\n        scrollViewRef.current?.scrollToEnd({ animated: true });\r\n        setMsg(\"\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error sending message:\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Text>Chat with {chatRoom.name || foreignid}</Text>\r\n      <ScrollView\r\n        style={{ flex: 1 }}\r\n        contentContainerStyle={{ paddingVertical: 10 }}\r\n        ref={scrollViewRef}\r\n      >\r\n        {messages.map((message) => (\r\n          <View key={message.id}>\r\n            <Text>\r\n              {message.senderId}: {message.content}\r\n            </Text>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n      <View>\r\n        <TextInput\r\n          value={msg}\r\n          onChangeText={(text) => setMsg(text)}\r\n          placeholder=\"Type your message here\"\r\n        />\r\n        <Button onPress={sendMessage} title=\"Send\" />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAE3D,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU;AAAe,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEhC,SAASC,IAAIA,CAAAC,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACnB,IAAAC,aAAA,GAA2CD,KAAK,CAACE,MAAM;IAA/CC,QAAQ,GAAAF,aAAA,CAARE,QAAQ;IAAEC,SAAS,GAAAH,aAAA,CAATG,SAAS;IAAEC,SAAS,GAAAJ,aAAA,CAATI,SAAS;EAEtC,IAAAC,SAAA,GAAsBtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3BG,GAAG,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EAClB,IAAAI,UAAA,GAAgC3B,QAAQ,CAAC,EAAE,CAAC;IAAA4B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAMG,SAAS,GAAG9B,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAM+B,aAAa,GAAG/B,MAAM,CAAC,IAAI,CAAC;EAElCF,SAAS,CAAC,YAAM;IACdgC,SAAS,CAACE,OAAO,GAAG1B,EAAE,CAAE,UAASE,UAAW,OAAM,CAAC;IACnDsB,SAAS,CAACE,OAAO,CAACC,IAAI,CAAC,MAAM,EAAEf,QAAQ,CAACgB,EAAE,CAAC;IAE3CJ,SAAS,CAACE,OAAO,CAACG,EAAE,CAAC,SAAS,EAAE,UAACC,UAAU,EAAK;MAC9CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,UAAU,CAAC;MAEhDP,WAAW,CAAC,UAACU,YAAY;QAAA,UAAAC,MAAA,CAAAC,kBAAA,CAASF,YAAY,IAAEH,UAAU;MAAA,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEF7B,KAAK,CACFmC,GAAG,CAAE,UAASlC,UAAW,eAAcU,QAAQ,CAACgB,EAAG,WAAU,CAAC,CAC9DS,IAAI,CAAC,UAACC,GAAG,EAAK;MACbf,WAAW,CAACe,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,GAAG,EAAK;MACdV,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAES,GAAG,CAAC;IAC9C,CAAC,CAAC;IAEJ,OAAO,YAAM;MACXjB,SAAS,CAACE,OAAO,CAACgB,UAAU,CAAC,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAAC9B,QAAQ,CAACgB,EAAE,CAAC,CAAC;EAEjB,IAAMe,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAI,CAACzB,GAAG,IAAI,CAACN,QAAQ,EAAE;MACrB;IACF;IAEA,IAAMgC,YAAY,GAAG;MACnBC,OAAO,EAAE3B,GAAG;MACZ4B,MAAM,EAAElC,QAAQ,CAACgB;IACnB,CAAC;IAED3B,KAAK,CACF8C,IAAI,CAAE,UAAS7C,UAAW,eAAcU,QAAQ,CAACgB,EAAG,UAAS,EAAEgB,YAAY,CAAC,CAC5EP,IAAI,CAAC,UAACP,UAAU,EAAK;MAAA,IAAAkB,qBAAA;MACpBxB,SAAS,CAACE,OAAO,CAACC,IAAI,CAAC,MAAM,EAAEG,UAAU,CAACS,IAAI,CAAC;MAC/ChB,WAAW,CAAC,UAACU,YAAY;QAAA,UAAAC,MAAA,CAAAC,kBAAA,CAASF,YAAY,IAAEH,UAAU,CAACS,IAAI;MAAA,CAAC,CAAC;MACjE,CAAAS,qBAAA,GAAAvB,aAAa,CAACC,OAAO,qBAArBsB,qBAAA,CAAuBC,WAAW,CAAC;QAAEC,QAAQ,EAAE;MAAK,CAAC,CAAC;MACtD/B,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC,CAAC,CACDqB,KAAK,CAAC,UAACC,GAAG,EAAK;MACdV,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAES,GAAG,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;EAED,OACErC,KAAA,CAACT,IAAI;IAACwD,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GACvBjD,KAAA,CAACR,IAAI;MAAAyD,QAAA,GAAC,YAAU,EAACzC,QAAQ,CAAC0C,IAAI,IAAIxC,SAAS;IAAA,CAAO,CAAC,EACnDR,IAAA,CAACT,UAAU;MACTsD,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAE;MACnBG,qBAAqB,EAAE;QAAEC,eAAe,EAAE;MAAG,CAAE;MAC/CC,GAAG,EAAEhC,aAAc;MAAA4B,QAAA,EAElB/B,QAAQ,CAACoC,GAAG,CAAC,UAACC,OAAO;QAAA,OACpBrD,IAAA,CAACX,IAAI;UAAA0D,QAAA,EACHjD,KAAA,CAACR,IAAI;YAAAyD,QAAA,GACFM,OAAO,CAACC,QAAQ,EAAC,IAAE,EAACD,OAAO,CAACd,OAAO;UAAA,CAChC;QAAC,GAHEc,OAAO,CAAC/B,EAIb,CAAC;MAAA,CACR;IAAC,CACQ,CAAC,EACbxB,KAAA,CAACT,IAAI;MAAA0D,QAAA,GACH/C,IAAA,CAACR,SAAS;QACR+D,KAAK,EAAE3C,GAAI;QACX4C,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAK5C,MAAM,CAAC4C,IAAI,CAAC;QAAA,CAAC;QACrCC,WAAW,EAAC;MAAwB,CACrC,CAAC,EACF1D,IAAA,CAACP,MAAM;QAACkE,OAAO,EAAEtB,WAAY;QAACuB,KAAK,EAAC;MAAM,CAAE,CAAC;IAAA,CACzC,CAAC;EAAA,CACH,CAAC;AAEX;AAEA,eAAe3D,IAAI;AAAC4D,qBAAA,CAAAC,MAAA;EAAAC,MAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}